
[{"content":"\u003c!DOCTYPE html\u003e\rMy Traits\rTechnical Reach\rI have a far-reaching understanding for the world of technology. With programming languages such as Java, C#, Python, HTML/CSS/JS, MySQL, MongoDB, and Linux. Familiarity with frameworks such as SpringBoot, .NET, and React. Software tools such Github, AWS Cloud, and Wireshark. IDE tools such as VS Code, Visual Studio, Eclipse, and Intellij. Cybersecurity insights such as cryptography, SOC analysis, and secure software design. Experience with methodologies such as Agile, Scrum, and Waterfall. These wide array of technical skills provides me a diverse understanding into the interconnectedness and interoperability of differing technologies. This knowledge will be crucial for me in fully understanding the innworkings of the organization's particular set of tech stacks and grant me the necessary toolkits to confidently complete programming, database, and documentation based deliverables, and ensure security of the applications.\rStrong Academic Background\rI have remained very disciplined and conscientious for my courses and during my undergraduate years (2017-2021), I have remained on the Dean's Honor List for 5+ semesters and received an award for Magna Cum Laude at my last semester and received my Bachelors for Computer Information Systems with relevant courses such as Project Management, Secure Application Design, Cloud Computing Infrastructure and Archietcture, Enterprise Applications Development, Database Administration and Implementation, and Intrusion Response and Detection. I have also received my Masters in Cybersecurity (2023-2024) and received Sumna Cum Laude with a 3.934 GPA. My graduate work focused on advanced topics with the relevant courses pertaining to Network Security, Secure Enterprise Computing, Secure Software Design, Cybersecurity Tools, Cybersecurity Risk Management, Advanced SOC Analysis, and Applied Cryptography.\nThese academic achievements serves as a testament that my capabilities to handle the academic rigor will all translate seamlessly into a professional work environment. My time spent at the University of Houston has provided me with the foundation needed to deliver multiple applications and documentations with optimal effiency, effectiveness, and quality. Holistic Drive\rI have an insatiable thirst for knowledge and do not plan on slowing down. As my hobby, I study up on different philosophies, astrophysics, social sciences, and quantum mechanics. This quality of mines demonstrates my tenacity to strive for as much learning that can be provided for the given deliverables. Communication\rCommunication: I possess the ability to convey technical jargon to the layman in a fluent, digestible manner, as well as incorporate the nomenclature from fields concerning cloud, software development, and cyber security and relay accurate information to more knowledgeable programmers. Conclusion\rI currently possess a Master’s degree in Cybersecurity, a Bachelor’s in Computer Information Systems, a certification for AWS Cloud Practitioner, and am working towards acquiring a Security+ Certification. With my academic background, knowledge acquisitions, and personal projects, I have built a comprehensive technical foundation in secure software development and express a steadfast conviction that aligns with the organization’s commitment to technological excellence and demonstrating ethical behavior and integrity to uphold the company’s reputation and trust of the clients. ","date":"10 August 2025","externalUrl":null,"permalink":"/","section":"","summary":"\u003c!DOCTYPE html\u003e\r\n\u003chtml\u003e\r\n\u003chead\u003e\r\n    \u003cmeta charset=\"UTF-8\" /\u003e\r\n\u003c/head\u003e\r\n\u003ch2\u003eMy Traits\u003c/h2\u003e\r\n\u003cbody\u003e\r\n\u003cdiv class=\"trait-box\" onclick=\"toggleTrait(this)\"\u003e\r\n  \u003cdiv class=\"trait-header\"\u003e\r\n  \u003cimg src=\"https://image-ms.s3.amazonaws.com/react.png\" class=\"icon left\" alt=\"icon\"\u003e\r\n  \u003cimg src=\"https://image-ms.s3.amazonaws.com/java.png\" class=\"icon left\" alt=\"icon\"\u003e\r\n  \u003cimg src=\"https://image-ms.s3.amazonaws.com/mysql.png\" class=\"icon left\" alt=\"icon\"\u003e\r\n  \u003cimg src=\"https://image-ms.s3.amazonaws.com/git.png\" class=\"icon left\" alt=\"icon\"\u003e\r\n  Technical Reach\r\n  \u003cimg src=\"https://image-ms.s3.amazonaws.com/nodejs.png\" class=\"icon right\" alt=\"icon\"\u003e\r\n  \u003cimg src=\"https://image-ms.s3.amazonaws.com/mongodb.png\" class=\"icon right\" alt=\"icon\"\u003e\r\n  \u003cimg src=\"https://image-ms.s3.amazonaws.com/springboot.png\" class=\"icon right\" alt=\"icon\"\u003e\r\n  \u003cimg src=\"https://image-ms.s3.amazonaws.com/aws.png\" class=\"icon right\" alt=\"icon\"\u003e\r\n  \u003c/div\u003e\r\n  \u003cdiv class=\"trait-content\"\u003e\r\nI have a far-reaching understanding for the world of technology. \r\n\u003col\u003e \r\n\u003cli\u003eWith programming languages such as Java, C#, Python, HTML/CSS/JS, MySQL, MongoDB, and Linux. \u003c/li\u003e\r\n\u003cli\u003eFamiliarity with frameworks such as SpringBoot, .NET, and React. \u003c/li\u003e \r\n\u003cli\u003eSoftware tools such Github, AWS Cloud, and Wireshark. \u003c/li\u003e \r\n\u003cli\u003eIDE tools such as VS Code, Visual Studio, Eclipse, and Intellij. \u003c/li\u003e \u003cli\u003eCybersecurity insights such as cryptography, SOC analysis, and secure software design.\u003c/li\u003e \u003cli\u003eExperience with methodologies such as Agile, Scrum, and Waterfall.\u003c/li\u003e \r\n\u003c/ol\u003e\r\nThese wide array of technical skills provides me a diverse understanding into the interconnectedness and interoperability of differing technologies. This knowledge will be crucial for me in fully understanding the innworkings of the organization's particular set of tech stacks and grant me the necessary toolkits to confidently complete programming, database, and documentation based deliverables, and ensure security of the applications.\r\n\u003c/div\u003e\r\n\u003c/div\u003e \r\n\u003cdiv class=\"trait-box\" onclick=\"toggleTrait(this)\"\u003e\r\n  \u003cdiv class=\"trait-header\"\u003eStrong Academic Background\u003c/div\u003e\r\n  \u003cdiv class=\"trait-content\"\u003e\r\n  I have remained very disciplined and conscientious for my courses and during my undergraduate years (2017-2021), I have remained on the Dean's Honor List for 5+ semesters and received an award for Magna Cum Laude at my last semester and received my Bachelors for \u003ca href=\"https://image-ms.s3.us-east-1.amazonaws.com/Bachelors.jpg\" target=\"_blank\"\u003e Computer Information Systems\u003c/a\u003e with relevant courses such as Project Management, Secure Application Design, Cloud Computing Infrastructure and Archietcture, Enterprise Applications Development, Database Administration and Implementation, and Intrusion Response and Detection.   \r\n\u003cp\u003eI have also received my \u003ca href=\"https://image-ms.s3.us-east-1.amazonaws.com/Masters.png\" target=\"_blank\"\u003eMasters in Cybersecurity\u003c/a\u003e (2023-2024) and received Sumna Cum Laude with a 3.934 GPA. My graduate work focused on advanced topics with the relevant courses pertaining to Network Security, Secure Enterprise Computing, Secure Software Design, Cybersecurity Tools, Cybersecurity Risk Management, Advanced SOC Analysis, and Applied Cryptography.\u003c/p\u003e","title":"","type":"page"},{"content":"","date":"10 August 2025","externalUrl":null,"permalink":"/tags/blog/","section":"Tags","summary":"","title":"Blog","type":"tags"},{"content":"","date":"10 August 2025","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"10 August 2025","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"I have finalized a new version of my Website Portfolio where it will be easier to peform updates and add in new projects I have worked on to showcase my programming abilities. Here is the link to my old website portfolio: http://react-web-portfolio.s3-website-us-east-1.amazonaws.com/.\nMy main purpose for this site is to document my progress working on various projects and showcase what I have learned!\npublic static void main(String[]args) { System.out.println(\u0026#34;This is a print statement to test out JavaScript.\u0026#34;); } ","date":"10 August 2025","externalUrl":null,"permalink":"/posts/mypost/","section":"Posts","summary":"\u003cp\u003eI have finalized a new version of my Website Portfolio where it will be easier to peform updates and add in new projects I have worked on to showcase my programming abilities. Here is the link to my old website portfolio: \u003ca\r\n  href=\"http://react-web-portfolio.s3-website-us-east-1.amazonaws.com/\"\r\n    target=\"_blank\"\r\n  \u003ehttp://react-web-portfolio.s3-website-us-east-1.amazonaws.com/\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eMy main purpose for this site is to document my progress working on various projects and showcase what I have learned!\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kd\"\u003estatic\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;This is a print statement to test out JavaScript.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","title":"Starting Out","type":"posts"},{"content":"","date":"10 August 2025","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"10 August 2025","externalUrl":null,"permalink":"/categories/updates/","section":"Categories","summary":"","title":"Updates","type":"categories"},{"content":"List of all the certifications I have completed.\n","date":"3 August 2025","externalUrl":null,"permalink":"/certifications/","section":"Certifications Aquired","summary":"\u003cp\u003eList of all the certifications I have completed.\u003c/p\u003e","title":"Certifications Aquired","type":"certifications"},{"content":"Plan to take it soon by sometime in August to September.\n","date":"3 August 2025","externalUrl":null,"permalink":"/certifications/certs/_sec/","section":"Certifications Aquired","summary":"\u003cp\u003ePlan to take it soon by sometime in August to September.\u003c/p\u003e","title":"Security Certification","type":"certifications"},{"content":"","date":"15 July 2024","externalUrl":null,"permalink":"/projects/","section":"Projects","summary":"","title":"Projects","type":"projects"},{"content":"","date":"15 July 2024","externalUrl":null,"permalink":"/tags/projects/","section":"Tags","summary":"","title":"Projects","type":"tags"},{"content":"Welcome to my Security Tools collection. Below you\u0026rsquo;ll find writeups on my experiences with the particular security tool.\n","date":"15 July 2024","externalUrl":null,"permalink":"/projects/sectools/","section":"Projects","summary":"\u003cp\u003eWelcome to my Security Tools collection. Below you\u0026rsquo;ll find writeups on my experiences with the particular security tool.\u003c/p\u003e","title":"Security Tools","type":"projects"},{"content":"Tools Used: Process Explorer, Process Monitor, Autoruns, ListDLLs\rProcess Exploer\rDisplays information about processes such as how much CPU and Memory is being allocated to each one and which DLLs they contain\rConsists of two sub windows where the top one shows actives processes and bottom one provides the options to view information regarding the Handles, DLLs, and Threads Process Monitor\rAdvanced logging tool capturing and displaying comprehensive details of the Registry, process/thread activity, and files in real time Combines the features of two legacy Sysinternals utilities, Filemon and Regmon Autoruns\rShows you what programs are configured to execute at system bootup or login\rShows full list of Registry file system locations available for auto-start configurations ListDLLs\rCommand-line tool that reports all the DLLs loaded into the system’s processes\rCan also be used to only list DLLs loaded in specific processes or to list a process with a particular loaded DLL Sysinternals Tools Overview Demo\r","date":"15 July 2024","externalUrl":null,"permalink":"/projects/sectools/securitytools7/","section":"Projects","summary":"\u003ch1\u003eTools Used: Process Explorer, Process Monitor, Autoruns, ListDLLs\u003c/h1\u003e\r\n\u003ch2\u003eProcess Exploer\u003c/h2\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eDisplays information about processes such as how much CPU and Memory is being allocated to each one and which DLLs they contain\u003c/li\u003e\r\n\u003cli\u003eConsists of two sub windows where the top one shows actives processes and bottom one provides the options to view information regarding the Handles, DLLs, and Threads \u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch2\u003eProcess Monitor\u003c/h2\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eAdvanced logging tool capturing and displaying comprehensive details of the Registry, process/thread activity, and files in real time \r\n\u003c/li\u003e\r\n\u003cli\u003eCombines the features of two legacy Sysinternals utilities, Filemon and Regmon  \u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch2\u003eAutoruns\u003c/h2\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eShows you what programs are configured to execute at system bootup or login\r\n\u003c/li\u003e\r\n\u003cli\u003eShows full list of Registry file system locations available for auto-start configurations  \r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch2\u003eListDLLs\u003c/h2\u003e\r\n\u003cul\u003e\r\n\u003cli\u003eCommand-line tool that reports all the DLLs loaded into the system’s processes\r\n\u003c/li\u003e\r\n\u003cli\u003eCan also be used to only list DLLs loaded in specific processes or to list a process with a particular loaded DLL  \r\n\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\u003ch2\u003eSysinternals Tools Overview Demo\u003c/h2\u003e\r\n\u003cvideo width=\"1000\" height=\"200\" controls\u003e\r\n  \u003csource src=\"https://videos-ms.s3.us-east-1.amazonaws.com/SysInternalsVideo.mp4\" type=\"video/mp4\"\u003e\r\n\u003c/video\u003e","title":"Security Tools 10-14: Systools","type":"projects"},{"content":"Initial Problem\rOn the previous week, I attempted to use a tool called Stegsolve to extract hidden messages embedded with the use of Steghide but was unable to do so as the tool is geared towards visual steganalysis rather than retrieving embedded data. This week I will be using Stegseek to extract that same embedded data.\nWhat is it?\rStegseek is a brute-forcing and steghide cracker security tool that can be used to extract hidden data from files. It relies on wordlists to perform dictionary attacks on passphrases used to hide the data. Compared to Stegcracker and Stegbrute, it has the fastest performance when searching through wordlists containing millions of words.\nWhat Problems Soes it Solve?\rA useful tool that can be used for security audits, penetration testing, and forensics investigation as it addresses the problem of recovering hidden data from files that used passphrases for encryption.\nWhat Data is Needed?\rStego File containing the hidden data that was embedded with Steghide\rWordlist\rHow do you Test It?\rI tested the security tool on the same images I embedded using Steghide a few weeks ago and was able to recover the hidden messages as the passwords I used were simple and was contained in the rockyou.txt word file. To install Stegseek, I installed the latest release found on their Github Repository and used the command ‘sudo apt install ./stegseek_0.6-1.deb’. The two main commands that are used for detecting and extracting the hidden contents are ‘stegseek [stegofile] [wordfile]’ and ‘stegseek –seed [stegofile]’. The first command simply attempts all the passwords provided in the specified wordlist against the stegofile, until it finds or doesn’t find a match.\nIf it detects a matching passphrase with the wordfile, then it displays the passphrase it found, the name of the original text file containing the passphrase, and then extracts the hidden message to a new text file.\nIf it fails to detect a matching passphrase, it returns back with the output, “error: Could not find a valid passphrase.”\nBut if you happen to know the passphrase but it isn’t available in any of the word lists you find, you can always make a custom wordlist to retrieve the contents of the stegofile.\nThe second command is used to extract unencrypted data from a steghide file or detect if it is encrypted.\nThis command tells us three things:\nIf the file contains steghide content. If it detects that the file has been tampered with and is unencrypted:\nI was unable to create my own file without a passphrase as Steghide requires the user to put in a passphrase when embedding data, but this is what it would look like.\nIf it detects that the file has been tampered with and is encrypted:\nIf it doesn’t detect that the file has been tampered with:\nHow much hidden content is contained.\nHow it was encrypted.\nReferences\rhttps://github.com/RickdeJager/stegseek\n","date":"10 July 2024","externalUrl":null,"permalink":"/projects/sectools/securitytools6/","section":"Projects","summary":"\u003ch2\u003eInitial Problem\u003c/h2\u003e\r\n\u003cp\u003eOn the previous week, I attempted to use a tool called Stegsolve to extract hidden messages embedded with the use of Steghide but was unable to do so as the tool is geared towards visual steganalysis rather than retrieving embedded data. This week I will be using Stegseek to extract that same embedded data.\u003c/p\u003e\n\u003ch2\u003eWhat is it?\u003c/h2\u003e\r\n\u003cp\u003eStegseek is a brute-forcing and steghide cracker security tool that can be used to extract hidden data from files. It relies on wordlists to perform dictionary attacks on passphrases used to hide the data. Compared to Stegcracker and Stegbrute, it has the fastest performance when searching through wordlists containing millions of words.\u003c/p\u003e","title":"Security Tool 9: Stegseek","type":"projects"},{"content":"What is it?\rStegsolve is a Java-based graphical tool designed to perform steganalysis. This particular tool detects and extracts hidden contents from image files through visual analysis and manipulation. Unlike steganography, steganalysis is the art of detecting hidden data within various types of digital media.\nWhat Problems does it Solve?\rStegsolve aids users in identifying if an image file contains hidden information and using various techniques to manipulate and visualize data in order to extract the hidden contents visually embedded within the image. The keyword is “visually” as it is important to note that this security tool is primarily used for visual steganalysis rather than extracting actual embedded data that can’t be extracted visually.\nWhat Data is Needed?\rImage file suspected of containing hidden information\rFamiliarity with steganography tools and techniques How do you Test It?\rInstallation\nAt first, I used the command ‘sudo apt-get install stegsolve’ but it was unable to locate the stegsolve package. I used the wget command to retrieve a jar file of stegsolve from a webpage and moved it to a new directory I made named Bin. The link I used can be found in the GitHub repo I linked under references, but it is not a good idea to install on host machine since it was marked as unsafe by Google.\nUsing Tool on CTF Images\nThe command to run the stegsolve jar file is ‘java -jar stegsolve.jar’. It opens up a GUI where I am given the option to open up any image file, I wish to perform a visual steganalysis on.\nI am able to navigate through different planes and filters that allows me to observe changes and irregularities in the image files. If the hidden message was hidden via LSB steganography, then I would navigate to LSB analysis mode and for color plane analysis, I would inspect the different RGB channels.\nThere are also different tools used for analyzing and extracting data. The file format option provides information about the file format, data extract is used to observe the bytes of the image, stereogram solver helps visualize hidden patterns by changing the offset until the image becomes visible, frame browser allows users to browser through different frames of a GIF, and image combiner combines multiple images into one. I experimented with images containing hidden flags and found them by navigating through the RGB channels.\nDecoding Steghide?\nA previous tool I used to implement steganography techniques to embed data within image files was Steghide. Now I will attempt to use Stegsolve to detect and extract the same images containing the hidden data. I was not able to find the passphrase or hidden message embedded, but I have identified signs that the image has been manipulated with the image combiner tool. When combining the image with itself or a copy, it shows up as normal with nothing that stands out.\nBut when I merge the channels with the normal image and manipulated image, it displays blots of color which indicates that one of the images have been tampered with. In an actual forensics investigation, this would allow me to use other steganography tools geared towards password cracking which will further my objectives in uncovering the secret information.\nA zoom in will be required to see the differences clearly. One thing to notice is that the second image is using a different bitwise operator. I did this to show the color contrast more clearly. When the image combiner merges two copies of the unmodified dog image, the color contrast is not present, it is identical to the first dog image with the AND operator.\nReferences\rhttps://github.com/zardus/ctf-tools/blob/master/stegsolve/install\nhttps://github.com/zer00d4y/stegsolve\nhttps://gr4n173.github.io/virsecctf_steganograhy/\n","date":"8 July 2024","externalUrl":null,"permalink":"/projects/sectools/securitytools5/","section":"Projects","summary":"\u003ch2\u003eWhat is it?\u003c/h2\u003e\r\n\u003cp\u003eStegsolve is a Java-based graphical tool designed to perform steganalysis. This particular tool detects and extracts hidden contents from image files through visual analysis and manipulation. Unlike steganography, steganalysis is the art of detecting hidden data within various types of digital media.\u003c/p\u003e\n\u003ch2\u003eWhat Problems does it Solve?\u003c/h2\u003e\r\n\u003cp\u003eStegsolve aids users in identifying if an image file contains hidden information and using various techniques to manipulate and visualize data in order to extract the hidden contents visually embedded within the image. The keyword is “visually” as it is important to note that this security tool is primarily used for visual steganalysis rather than extracting actual embedded data that can’t be extracted visually.\u003c/p\u003e","title":"Security Tool 8: Stegsolve","type":"projects"},{"content":"What is it?\rExiftool is a command-line application and platform-independent Perl library used for reading, writing, and editing metadata from a variety of different file formats.\nWhat Problems Does it Solve?\rExiftool is reliable in managing metadata in files and can be used to verify and sanitize the file’s metadata. This ensures that the metadata is free of malicious code or vulnerable data. This security tool can also be used to remove sensitive information by stripping certain data contents from files. Some metadata contain sensitive information such as user data or even GPS coordinates and can pose privacy risks. This security tool is especially crucial in the field of digital forensics to determine the origin of the media file and uncover concealed data that could be of relevance to an investigation.\nWhat Data is Needed?\rImage or Audio or Video files containing metadata\rKnowledge of structure and standards of metadata\rHow do you Test It?\rBasic Metadata Extraction\nTo retrieve the image’s metadata with its fields and corresponding field information, you enter the command “exiftool [image file]”.\nMetadata Extraction via Apple\nI took a photo of my mouse on my phone and uploaded it on a Kali Linux virtual machine. Using the exiftool command, it displayed my GPS position, Lens ID, Camera Model Name, Focal Length, and other details regarding the camera’s properties.\nEditing Metadata Contents Removing Metadata\nUsing the ‘-all=’ command strips all standard metadata fields from an image. From the original, this command shaved off 19 field rows. Despite removing all metadata, there is still some information present and these are the default fields based on the image content itself. It remains even if the metadata has been stripped. Using this command also creates a backup file in case the user wants to review the original metadata.\nExtracting Hidden Messages via Exiftool\nExtracting Hidden Messages from Files Modified with Steghide Failure\nA previously security tool used was Steghide which embeds hidden data onto image files. The goal is to extract the hidden message using Exiftool. Unfortunately, Exiftool is not well equipped to sift through steganographic data, but can still be used to see identify changes over time. Despite not being able to assess the hidden contents, I noticed a change in the file size of a difference of about 2 kilobytes.\nBefore\nAfter\nGeotagging\nGeotagging is the process whereby geographical identification metadata is added to various media. This is useful for documenting or tracking down locations the photos or videos were taken.\nReferences\rhttps://exiftool.org/\n","date":"1 July 2024","externalUrl":null,"permalink":"/projects/sectools/securitytools4/","section":"Projects","summary":"\u003ch2\u003eWhat is it?\u003c/h2\u003e\r\n\u003cp\u003eExiftool is a command-line application and platform-independent Perl library used for reading, writing, and editing metadata from a variety of different file formats.\u003c/p\u003e\n\u003ch2\u003eWhat Problems Does it Solve?\u003c/h2\u003e\r\n\u003cp\u003eExiftool is reliable in managing metadata in files and can be used to verify and sanitize the file’s metadata. This ensures that the metadata is free of malicious code or vulnerable data. This security tool can also be used to remove sensitive information by stripping certain data contents from files. Some metadata contain sensitive information such as user data or even GPS coordinates and can pose privacy risks. This security tool is especially crucial in the field of digital forensics to determine the origin of the media file and uncover concealed data that could be of relevance to an investigation.\u003c/p\u003e","title":"Security Tool 7: Exiftool","type":"projects"},{"content":"What is it?\rSteghide is a steganography program that allows data to be hidden in image and audio files. Steganography is the practice of concealing data within various types of files.\nWhere did you get if from?\rI installed Steghide on Linux with the command ‘sudo apt-get install steghide -y’.\nWhat problem does it solve?\rCryptography is a practice that is used to encrypt messages to be unreadable to unauthorized users. Unlike cryptography, steganography hides the message’s existence by embedding it within another text, image, audio, or video file. The main difference being that the unreadable data is still present on the cryptography side, while steganography hides the very existence of the message. This is useful for confidential communication, avoiding detection, and digital watermarking which allows the author to copyright information without needing to explicitly modify the media.\nWhat data is needed?\rCarrier File: the image or audio file you want to conceal the data in\rData File: file containing the data you want to hide in the carrier file\rPassphrase: to secure the concealed data and ensure only those with the correct passwords can extract the hidden data\rHow do you test it?\rImage Files\nThe first step is to create a text file containing the data you want to hide and having an image file to contain the concealed data. On my end, the carrier file is ‘dog.jpeg’ and the data file is ‘text.txt’. The command used to embed a text file into an image file is ‘steghide embed -cf dog.jpeg -ef text.txt -p passcode’. This is the simplified version, the file destination needs to be included when specifying the carrier and data files. Otherwise, Steghide will not be able to open the files. The -cf command specifies which file is to be designated as the carrier file, the -ef command specifies which file to be designated as the data file, and the -p command specifies the passphrase used to embed and extract the data.\nTo extract the data, the command needed would be “steghide extract -sf ‘dog.jpeg’ -p passcode -xf ‘textExtracted.txt’. The -sf command specifies the file containing the hidden data and -p specifies the passphrase used to embed the data, which for my case is ‘passcode’. The -xf command extracts the data onto a new file.\nAudio Files\nSimilar to the last use case, a data file, passphrase, and carrier file are needed, with this time the audio file being the carrier file instead of the image file.\n","date":"24 June 2024","externalUrl":null,"permalink":"/projects/sectools/securitytools3/","section":"Projects","summary":"\u003ch2\u003eWhat is it?\u003c/h2\u003e\r\n\u003cp\u003eSteghide is a steganography program that allows data to be hidden in image and audio files. Steganography is the practice of concealing data within various types of files.\u003c/p\u003e\n\u003ch2\u003eWhere did you get if from?\u003c/h2\u003e\r\n\u003cp\u003eI installed Steghide on Linux with the command ‘sudo apt-get install steghide -y’.\u003c/p\u003e\n\u003ch2\u003eWhat problem does it solve?\u003c/h2\u003e\r\n\u003cp\u003eCryptography is a practice that is used to encrypt messages to be unreadable to unauthorized users. Unlike cryptography, steganography hides the message’s existence by embedding it within another text, image, audio, or video file. The main difference being that the unreadable data is still present on the cryptography side, while steganography hides the very existence of the message. This is useful for confidential communication, avoiding detection, and digital watermarking which allows the author to copyright information without needing to explicitly modify the media.\u003c/p\u003e","title":"Security Tool 6: Steghide","type":"projects"},{"content":"What is it?\rSQLMap is a python-based penetration testing tool that automates the detecting and exploiting process of potential SQL injection vulnerabilities found in web applications. It is also open source and able to take over database servers. Some of the different types of automated SQL injections attacks that can be deployed include error based, time delay, stacked queries, Boolean based, and union based attacks.\nWhere did you get it from?\rFound it in my collection of security tools provided by Kali Linux and it was located in the Database Assessment category. To get it manually, you can install it from this GitHub Repository: https://github.com/sqlmapproject/sqlmap.\nWhat Problems Does it Solve?\rIt is able to solve several critical problems related to web application security such as identifying SQL injection flaws that can be exploited to gain unauthorized access, retrieving database information such as tables and columns using data enumeration commands, and simplifying penetration testing thanks to its automated SQL injection attacks that alleviates unnecessary time and effort that could have taken place with manual testing.\nWhat Data is Needed?\rSQL Injection Attack\nTarget URL\rRequest Parameters (ex: GET, POST)\rHow do you Test It?\rSQL Injection Attack Web Application Success\nPart 1: Installing Docker \u0026amp; Setting up DVWA\nThe first step was to install Docker so I could set up a Damn Vulnerable Web Application (DVWA). This web application provides a legal environment for web developers and security professionals to understand and learn about web application security. The command used to install Docker was ‘sudo apt install -y docker.io’ and to enable it was ‘sudo systemctl enable docker –now’. The command to run the DVWA container was ‘sudo docker run \u0026ndash;rm -it -p 8080:80 vulnerables/web-dvwa’. Once the web application was set up, the next step was to login and create a database.\nPart 2: Testing SQL Injection attacks on DVWA\nIn order to test this web application, the URL was needed and the desired parameters to input at the end of the URL. There are various options to choose from with regards to exploiting the application’s vulnerabilities. For this case, I clicked on ‘SQL Injection’ where it contained a prompt asking for a User ID. Typing in a random number and clicking submit in the input field changes the URL which lets us know that it is a GET response. This can be verified by checking the Network in the dev tools and seeing that it is using the GET method. The target URL and itsparameter need to be passed in the terminal with the ‘sqlmap -u “[insert target url]”’ command, but before doing that, the request cookies are needed, otherwise it will get a 302 redirect. Since the endpoint can only be accessed with a login, sqlmap needs the cookies information in order for it to properly authenticate its commands. In the network section of the devtools, the row with the target url and parameter contains the Session ID for the request cookie.\nHaving the session id, the command is reused, except it includes the cookie details. The command would be inputted as ‘sqlmap -u “[insert target url]” \u0026ndash;cookie=“PHPSESSID=[insert session id]; security=low”’. Now that the cookie is passed, the sqlmap security tool will know how to authenticate against the DVWA. In addition to this command, the ‘\u0026ndash;tables\u0026rsquo; will be added, which is an enumeration option that will fetch the database tables.\nPassword Cracking Success\nAnother thing that can done with sqlmap is password cracking and this is done by enumerating the columns with the command: ‘sqlmap -u “[insert target url]” \u0026ndash;cookie=“PHPSESSID=[insert session id]; security=low” \u0026ndash;columns -T users \u0026ndash;batch\u0026rsquo;. The ‘-T users’ part specifies which table to database to enumerate and \u0026ndash;batch is used to bypass the few yes/no prompts it asks and goes with the default options. By enumerating the columns of the users table, we can verify that there is indeed a password’s column. The next command is to use the ‘\u0026ndash;dump -T users –batch’ which dumps the data contained in the user’s table and launches a dictionary-based attack against hashes that are located in the database. It goes off of a wordlist text file that is included with Kali Linux and contains the option to include custom dictionary files as well.\nReferences\rhttps://github.com/sqlmapproject/sqlmap\nhttps://youtu.be/nVj8MUKkzQk?si=X3P2yZb26Raodsgo\nhttps://www.cs.toronto.edu/~arnold/427/15s/csc427/tools/sqlmap/index.html\n","date":"16 June 2024","externalUrl":null,"permalink":"/projects/sectools/securitytools2/","section":"Projects","summary":"\u003ch2\u003eWhat is it?\u003c/h2\u003e\r\n\u003cp\u003eSQLMap is a python-based penetration testing tool that automates the detecting and exploiting process of potential SQL injection vulnerabilities found in web applications. It is also open source and able to take over database servers. Some of the different types of automated SQL injections attacks that can be deployed include error based, time delay, stacked queries, Boolean based, and union based attacks.\u003c/p\u003e\n\u003ch2\u003eWhere did you get it from?\u003c/h2\u003e\r\n\u003cp\u003eFound it in my collection of security tools provided by Kali Linux and it was located in the Database Assessment category. To get it manually, you can install it from this GitHub Repository: \u003ca\r\n  href=\"https://github.com/sqlmapproject/sqlmap\"\r\n    target=\"_blank\"\r\n  \u003ehttps://github.com/sqlmapproject/sqlmap\u003c/a\u003e.\u003c/p\u003e","title":"Security Tool 5: SQLMap","type":"projects"},{"content":"What is it?\rDNSChef is a DNS proxy server that intercepts DNS queries and is developed in Python. It is used for analyzing malware and penetration testing and is a valuable tool for users as it allows them to filter DNS queries, redirect traffic, and poison DNS servers. DNSChef also allows users to create custom DNS responses based off a set of configured rules which can be utilized to simulate attacks to test the effectiveness of other security tools.\nWhere did you get if from?\rIt was located in my Kali Linux, where it has a collection of different security tools. DNSChef was located in the Sniffing \u0026amp; Spoofing category. To get it on Windows, you can install it from this GitHub Repository: https://github.com/iphelix/dnschef.\nWhat Problems Does it Solve?\rThis security tool can be used for a variety of different use cases such as bypassing network restrictions, spoofing DNS attacks, and redirecting malware DNS queries to a safe environment for further analysis.\nWhat Data is Needed?\rDNS Spoofing Attack\nDomain Name of Webpage\rIP Address of Machine with DNSChef\rHow do you Test It?\rDNS Spoofing Attack Success\nI used Kali Linux VM (KVM) and Windows 10 VM (WVM) to test out DNS spoofing. I decided to choose http://www.example.com as my target site. In KVM, I opened up DNSChef and ran the command, ‘dnschef \u0026ndash;fakedomains=example.com \u0026ndash;fakeip=192.168.217.133 \u0026ndash; interface=192.168.217.133’. This command configures DNSChef to spoof DNS responses for the example.com domain and return the IP address 192.168.217.133 (KVM’s IPv4) each time the domain is requested. While this was running, I opened my WVM and configured my adapter options by going into the Ethernet’s properties and having the TCP/IPv4 use the KVM’s IP address as its preferred DNS server. The reason this was done was to ensure that all DNS queries was sent from the WVM to DNSChef and to simulate the spoofing event to understand how it would look in the terminal.\nBefore (Windows VM)\nAfter (Windows VM)\nReferences\rhttps://github.com/iphelix/dnschef\nhttps://medium.com/@STarXT/dnschef-a-comprehensive-guide-to-network-security-testing-and-monitoring-362c153953f0\nhttps://hellfire0x01.medium.com/get-familiar-with-dns-hijacking-2215a0a318d4\n","date":"10 June 2024","externalUrl":null,"permalink":"/projects/sectools/securitytools/","section":"Projects","summary":"\u003ch2\u003eWhat is it?\u003c/h2\u003e\r\n\u003cp\u003eDNSChef is a DNS proxy server that intercepts DNS queries and is developed in Python. It is\nused for analyzing malware and penetration testing and is a valuable tool for users as it allows\nthem to filter DNS queries, redirect traffic, and poison DNS servers. DNSChef also allows users\nto create custom DNS responses based off a set of configured rules which can be utilized to\nsimulate attacks to test the effectiveness of other security tools.\u003c/p\u003e","title":"Security Tool 4: DNSChef","type":"projects"},{"content":"Link\n","date":"29 October 2022","externalUrl":null,"permalink":"/certifications/certs/_aws/","section":"Certifications Aquired","summary":"\u003cp\u003e\u003ca href=\"https://www.credly.com/badges/3edd712f-67fb-4027-a183-26f396378ae8\" target=\"_blank\" \u003eLink\u003c/a\u003e\u003c/p\u003e","title":"AWS Cloud Practitioner Certification","type":"certifications"},{"content":"\rHome Page\nLogin Page\nRegistration Page\nTable of Available Cars\nUsers Table + Profile Dropdown\nForm to Register Vehicle into Table\nProject Details\rPurpose of Application\rDuring my time in the training program offered by Cognixia USA, we had a Capstone project where the objective was to think up of a practical solution that can be of benefit to people and to demo a prototype of that app. The purpose of this application was to have an online market where people are granted the freedom and accessibility to make fair exchanges as they see fit. And these types of exchanges are meant to bypass the high car dealership fees and contactual obligations. Benefits\rAllow users to more easily manage their cost savings by allowing them to buy and sell used cars\rBeneficial as it would give them accessibility and freedom to connect with others and make transactional exchanges with theior used vehicles\rServes to cirvumvent the high car dealership fees and gives car owners the freedom to make fluid negotiations amongst themselves\rDescription\rThis application was done with a Team I worked alongside with. It was 4 people and divided between frontend and backend. The backend focused on SpringBoot with Eclipse and having the servers and database up on AWS. The Frontend used Visual Studio and was tasked with desigining the webpage and fetching API's to have it be displayed on the webpage. I created and populated the tables with MySQL and the data inputted was the vehicles available on the market and users that registered on the webpage. The Backend used Java to handle all the business logic and used Springboot because it simplified the building process, allowed for dependency injections, and was used to connect to the database.\rWe also used Git commands to constantly update our project by making push and pull requests from the repository. Lastly, the server and database was linked to AWS Elastic Beanstalk, while the website was being hosted on an S3 Bucket. ","date":"16 September 2022","externalUrl":null,"permalink":"/projects/carapp/","section":"Projects","summary":"\u003csection class=\"container\"\u003e\r\n    \u003cdiv class=\"slider-wrapper\"\u003e\r\n        \u003cdiv class=\"slider\"\u003e\r\n        \u003cimg id=\"Car1\" src=\"https://image-ms.s3.amazonaws.com/Car1.png\"\u003e\u003c/img\u003e\r\n        \u003cimg id=\"Car2\" src=\"https://image-ms.s3.amazonaws.com/Car2.png\"\u003e\u003c/img\u003e\r\n        \u003cimg id=\"Car3\" src=\"https://image-ms.s3.amazonaws.com/Car3.png\"\u003e\u003c/img\u003e\r\n        \u003cimg id=\"Car4\" src=\"https://image-ms.s3.amazonaws.com/Car4.png\"\u003e\u003c/img\u003e\r\n        \u003cimg id=\"Car5\" src=\"https://image-ms.s3.amazonaws.com/Car5.png\"\u003e\u003c/img\u003e\r\n        \u003cimg id=\"Car6\" src=\"https://image-ms.s3.amazonaws.com/Car6.png\"\u003e\u003c/img\u003e\r\n        \u003c/div\u003e\r\n        \u003cdiv class=\"slider-caption\" id=\"caption-Car1\" style=\"display: none;\"\u003e\u003cp\u003eHome Page\u003c/p\u003e\u003c/div\u003e\r\n        \u003cscript\u003e\r\n        document.addEventListener('DOMContentLoaded', function() {\r\n            function showCaptionForHash() {\r\n                // Hide all captions\r\n                document.querySelectorAll('.slider-caption').forEach(function(el) {\r\n                    el.style.display = 'none';\r\n                });\r\n                // Show the caption for the current hash\r\n                var hash = window.location.hash;\r\n                if (hash \u0026\u0026 hash.startsWith('#Car')) {\r\n                    var caption = document.getElementById('caption-' + hash.substring(1));\r\n                    if (caption) caption.style.display = 'block';\r\n                }\r\n            }\r\n            window.addEventListener('hashchange', showCaptionForHash);\r\n            showCaptionForHash();\r\n        });\r\n        \u003c/script\u003e\r\n        \u003cdiv class=\"slider-caption\" id=\"caption-Car2\" style=\"display: none;\"\u003e\u003cp\u003eLogin Page\u003c/p\u003e\u003c/div\u003e\r\n        \u003cdiv class=\"slider-caption\" id=\"caption-Car3\" style=\"display: none;\"\u003e\u003cp\u003eRegistration Page\u003c/p\u003e\u003c/div\u003e\r\n        \u003cdiv class=\"slider-caption\" id=\"caption-Car4\" style=\"display: none;\"\u003e\u003cp\u003eTable of Available Cars\u003c/p\u003e\u003c/div\u003e\r\n        \u003cdiv class=\"slider-caption\" id=\"caption-Car5\" style=\"display: none;\"\u003e\u003cp\u003eUsers Table + Profile Dropdown\u003c/p\u003e\u003c/div\u003e\r\n        \u003cdiv class=\"slider-caption\" id=\"caption-Car6\" style=\"display: none;\"\u003e\u003cp\u003eForm to Register Vehicle into Table\u003c/p\u003e","title":"Car Dealership Web Application","type":"projects"},{"content":"These videos show the first time I experimented with different security tools in my undergraduate years.\nImage Steganography\rYour browser does not support the video tag.\rAudio Steganography\r","date":"10 December 2020","externalUrl":null,"permalink":"/projects/sectools/securitytools8/","section":"Projects","summary":"\u003cp\u003eThese videos show the first time I experimented with different security tools in my undergraduate years.\u003c/p\u003e\n\u003ch2\u003eImage Steganography\u003c/h2\u003e\r\n\u003cvideo width=\"1000\" height=\"800\" controls\u003e\r\n  \u003csource src=\"https://videos-ms.s3.us-east-1.amazonaws.com/ImageSteg1.mp4\" type=\"video/mp4\"\u003e\r\n  Your browser does not support the video tag.\r\n\u003c/video\u003e\r\n\u003cvideo width=\"1000\" height=\"800\" controls style=\"margin-top:1rem\"\u003e\r\n  \u003csource src=\"https://videos-ms.s3.us-east-1.amazonaws.com/ImageSteg2.mp4\" type=\"video/mp4\"\u003e\r\n\u003c/video\u003e\r\n\u003ch2\u003eAudio Steganography\u003c/h2\u003e\r\n\u003cvideo width=\"1000\" height=\"200\" controls\u003e\r\n  \u003csource src=\"https://videos-ms.s3.us-east-1.amazonaws.com/AudioSteg.mp4\" type=\"video/mp4\"\u003e\r\n\u003c/video\u003e","title":"Security Tools 1-3: Image \u0026 Audio Steganography","type":"projects"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"Will be posted soon.\n","externalUrl":null,"permalink":"/projects/datapipeline/","section":"Projects","summary":"\u003cp\u003eWill be posted soon.\u003c/p\u003e","title":"Scalable Data Lakehouse Pipeline","type":"projects"},{"content":"Will be posted soon.\n","externalUrl":null,"permalink":"/projects/ecommerce/","section":"Projects","summary":"\u003cp\u003eWill be posted soon.\u003c/p\u003e","title":"Secure E-Commerce Web Application","type":"projects"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]